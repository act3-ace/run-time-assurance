include:
- project: devsecops/cicd/pipeline
  ref: v3.1.6
  file: python/packaged_lib.yml
- project: devsecops/cicd/pipeline
  ref: v3.1.6
  file: python/docs.yml


variables:
  KANIKO_ARGS: --cache=true --skip-unused-stages --registry-mirror=$KANIKO_REGISTRY_MIRROR --cache-repo=$CI_REGISTRY_IMAGE/cache --build-arg IMAGE_REPO_BASE=$IMAGE_REPO_BASE --build-arg PIP_INDEX_URL=$PIP_INDEX_URL --build-arg APT_MIRROR_URL=$APT_MIRROR_URL --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN
  APT_MIRROR_URL: http://10.1.3.235:3142/ftp.debian.org/debian
  DO_RELEASE: "true"
  KANIKO_REGISTRY_MIRROR: reg-cache.act3-ace.ai
  PIP_INDEX_URL: https://pypi.org/simple/
  SRC_DIR: run_time_assurance
  UNIT_TEST_DIR: tests

mkdocs:
  stage: Test
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME != null'
      exists:
        - mkdocs.yml
    - if: '$CI_COMMIT_TAG =~ /^v([0-9]+)\.([0-9]+)\.([0-9]+)$|^v([0-9]+)\.([0-9]+)\.([0-9]+)-.*$/' 
      exists:
        - mkdocs.yml
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
      exists:
        - mkdocs.yml
  image:
    name: $CI_REGISTRY_IMAGE:ci-$CI_PIPELINE_ID
    entrypoint: ['']
  variables:
    ENABLE_PDF_EXPORT: 1
  script:
  - pip install -r mkdocs-requirements.txt
  - mkdocs build
  artifacts:
    paths:
      - site/

unit test:
  rules:
    - when: never
  script:
    - ls

pages:
  stage: Release
  image: ${IMAGE_REPO_BASE}docker.io/alpine
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
      exists:
        - mkdocs.yml
  script:
    # create public directory if needed
    - mkdir -p public
    # move contents of directory site to directory public
    - mv site/* public/
    # if htmlcov exits (made by the pytest-cov) then move the directory htmlcov to inside directory public (eg. public/htmlcov)
    - if [ -e htmlcov ]; then mv htmlcov/ public/; fi
  artifacts:
    paths:
      - public/
